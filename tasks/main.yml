---
- name: Clone Lets Encrypt | git
  git:
    repo: https://github.com/letsencrypt/letsencrypt
    dest: "{{ letsencrypt_source }}"

- name: does certificate exist
  shell: "if [ -f {{ letsencrypt_certificate_path }} ]; then echo yes; else echo no; fi"
  register: letsencrypt_certificate_exists

- name: get how long the current certificate is valid for
  shell: "echo $(($(date --date=\"$(cat {{ letsencrypt_certificate_path }} | openssl x509 -noout -enddate 2>/dev/null | awk -F\\= '{print $2}')\" +%s)-$(date +%s)))"
  register: letsencrypt_expires_in
  when: letsencrypt_certificate_exists.stdout

- name: debug
  debug:
    msg: "exists? {{ letsencrypt_certificate_exists.stdout }} || expire in? {{ letsencrypt_expires_in.stdout }}"

- name: request signed certificate
  sudo: no
  shell: "{{ letsencrypt_source }}/letsencrypt-auto certonly --standalone{% if letsencrypt_agree_tos %} --agree-tos {% endif %} {% if letsencrypt_email %} --email {{ letsencrypt_email }} {% endif %} -d {{ letsencrypt_domain }}"
  when: not letsencrypt_certificate_exists.stdout or letsencrypt_expires_in.stdout < 2592000

- name: create /data/www if does not exist
  file:
    path: "{{ letsencrypt_path }}"
    state: directory
    owner: "{{ letsencrypt_owner }}"
    group: "{{ letsencrypt_group }}"
    mode: 0755

- name: read in public data
  shell: "cat /etc/letsencrypt/live/{{ letsencrypt_domain }}/fullchain.pem"
  register: letsencrypt_public_key

- name: read in private key data
  shell: "cat /etc/letsencrypt/live/{{ letsencrypt_domain }}/privkey.pem"
  register: letsencrypt_private_key

- name: write combined ssl file
  template:
    src: data/www/ssl.combined
    dest: "{{ letsencrypt_path_combined }}"
    owner: "{{ letsencrypt_owner }}"
    group: "{{ letsencrypt_group }}"
    mode: 0400
  when: letsencrypt_combined

- name: write ssl certificate file
  template:
    src: data/www/ssl.crt
    dest: "{{ letsencrypt_path_public }}"
    owner: "{{ letsencrypt_owner }}"
    group: "{{ letsencrypt_group }}"
    mode: 0440
  when: not letsencrypt_combined

- name: write ssl private key file
  template:
    src: data/www/ssl.key
    dest: "{{ letsencrypt_path_private }}"
    owner: "{{ letsencrypt_owner }}"
    group: "{{ letsencrypt_group }}"
    mode: 0440
  when: not letsencrypt_combined
